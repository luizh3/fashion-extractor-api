#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Teste para an√°lise completa de outfit usando imagem inteira
"""

import requests
import json
import os

# Configura√ß√£o
API_BASE_URL = "http://localhost:8000"
TEST_IMAGE_PATH = "test_images/outfit_test.jpg"

def test_complete_outfit_analysis():
    """Testa a an√°lise completa de outfit usando a imagem inteira"""
    print("üß™ TESTE DE AN√ÅLISE COMPLETA DE OUTFIT")
    print("=" * 50)
    
    # Verificar se a API est√° rodando
    try:
        health_response = requests.get(f"{API_BASE_URL}/health")
        if health_response.status_code != 200:
            print("‚ùå API n√£o est√° respondendo")
            return False
        print("‚úÖ API est√° funcionando")
    except Exception as e:
        print(f"‚ùå Erro ao conectar com a API: {e}")
        return False
    
    # Verificar se existe uma imagem de teste
    if not os.path.exists(TEST_IMAGE_PATH):
        print(f"‚ö†Ô∏è  Imagem de teste n√£o encontrada: {TEST_IMAGE_PATH}")
        print("   Voc√™ pode usar qualquer imagem com uma pessoa vestida")
        return False
    
    # Fazer upload da imagem para an√°lise
    print(f"\nüì§ Enviando imagem: {TEST_IMAGE_PATH}")
    
    try:
        with open(TEST_IMAGE_PATH, 'rb') as image_file:
            files = {'file': (os.path.basename(TEST_IMAGE_PATH), image_file, 'image/jpeg')}
            
            response = requests.post(
                f"{API_BASE_URL}/api/v1/analysis/complete",
                files=files
            )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ An√°lise completa realizada com sucesso!")
            
            # Exibir resultados da an√°lise completa
            display_complete_analysis_results(result)
            
            return True
        else:
            print(f"‚ùå Erro na an√°lise: {response.status_code}")
            print(response.text)
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao enviar imagem: {e}")
        return False

def display_complete_analysis_results(result):
    """Exibe os resultados da an√°lise completa"""
    print("\nüéØ AN√ÅLISE COMPLETA DO OUTFIT")
    print("=" * 50)
    
    # Informa√ß√µes b√°sicas
    print(f"üìã Arquivo: {result.get('filename', 'N/A')}")
    print(f"üÜî Session ID: {result.get('session_id', 'N/A')}")
    
    # An√°lise da imagem completa
    complete_analysis = result.get('complete_outfit_analysis', {})
    
    if 'error' in complete_analysis:
        print(f"\n‚ùå Erro na an√°lise completa: {complete_analysis['error']}")
        return
    
    full_image_analysis = complete_analysis.get('full_image_analysis', {})
    
    print(f"\nüåü AN√ÅLISE DA IMAGEM COMPLETA:")
    
    # Rating geral
    overall_rating = full_image_analysis.get('overall_rating', {})
    if overall_rating:
        print(f"   Avalia√ß√£o: {overall_rating.get('emoji', '')} {overall_rating.get('level', 'N/A')}")
        print(f"   Descri√ß√£o: {overall_rating.get('description', 'N/A')}")
        print(f"   Score de coordena√ß√£o: {overall_rating.get('coordination_score', 0):.3f}")
        print(f"   Estilo dominante: {overall_rating.get('dominant_style', 'N/A')}")
        print(f"   Confian√ßa do estilo: {overall_rating.get('style_confidence', 0):.3f}")
    
    # An√°lise de estilo
    style_analysis = full_image_analysis.get('style_analysis', {})
    if style_analysis:
        print(f"\nüëî AN√ÅLISE DE ESTILO:")
        all_scores = style_analysis.get('all_style_scores', {})
        for style, score in all_scores.items():
            print(f"   ‚Ä¢ {style.title()}: {score:.3f}")
    
    # An√°lise de coordena√ß√£o
    coordination_analysis = full_image_analysis.get('coordination_analysis', {})
    if coordination_analysis:
        print(f"\nüé® AN√ÅLISE DE COORDENA√á√ÉO:")
        all_scores = coordination_analysis.get('all_coordination_scores', {})
        for aspect, score in all_scores.items():
            print(f"   ‚Ä¢ {aspect.replace('_', ' ').title()}: {score:.3f}")
    
    # Insights
    insights = full_image_analysis.get('insights', [])
    if insights:
        print(f"\nüí° INSIGHTS:")
        for i, insight in enumerate(insights, 1):
            print(f"   {i}. {insight}")
    
    # Compara√ß√£o com an√°lise individual
    individual_analysis = complete_analysis.get('individual_parts_analysis', {})
    if individual_analysis:
        print(f"\nüîó COMPARA√á√ÉO COM AN√ÅLISE INDIVIDUAL:")
        individual_score = individual_analysis.get('compatibility_score', 0)
        overall_score = overall_rating.get('coordination_score', 0)
        
        print(f"   ‚Ä¢ Score individual (partes): {individual_score:.3f}")
        print(f"   ‚Ä¢ Score geral (imagem completa): {overall_score:.3f}")
        
        if abs(individual_score - overall_score) < 0.1:
            print(f"   ‚úÖ An√°lises consistentes")
        else:
            print(f"   ‚ö†Ô∏è  Diferen√ßa entre an√°lises - CLIP v√™ o conjunto de forma diferente")
    
    # Resumo
    summary = result.get('summary', {})
    print(f"\nüìä RESUMO:")
    print(f"   ‚Ä¢ Pe√ßas detectadas: {summary.get('total_parts_detected', 0)}")
    print(f"   ‚Ä¢ Pe√ßas classificadas: {summary.get('total_parts_classified', 0)}")
    print(f"   ‚Ä¢ Score individual: {summary.get('compatibility_score', 0):.3f}")
    print(f"   ‚Ä¢ Score geral: {summary.get('overall_coordination_score', 0):.3f}")

def explain_analysis_differences():
    """Explica as diferen√ßas entre an√°lise individual e completa"""
    print("\nüß† DIFEREN√áAS ENTRE AN√ÅLISES")
    print("=" * 50)
    
    print("\nüìã AN√ÅLISE INDIVIDUAL (ANTES):")
    print("   ‚Ä¢ Separa imagem em partes (torso, legs, feet)")
    print("   ‚Ä¢ Classifica cada parte individualmente")
    print("   ‚Ä¢ Compara embeddings de texto das classifica√ß√µes")
    print("   ‚ùå N√£o v√™ o outfit como um todo")
    print("   ‚ùå Perde contexto visual")
    print("   ‚ùå N√£o considera harmonia geral")
    
    print("\nüéØ AN√ÅLISE COMPLETA (AGORA):")
    print("   ‚Ä¢ Usa a imagem inteira da pessoa")
    print("   ‚Ä¢ CLIP analisa o outfit como um conjunto")
    print("   ‚Ä¢ Considera coordena√ß√£o, estilo, cores")
    print("   ‚úÖ V√™ o outfit como um todo")
    print("   ‚úÖ Considera contexto visual completo")
    print("   ‚úÖ Avalia harmonia geral")
    
    print("\nüí° VANTAGENS DA AN√ÅLISE COMPLETA:")
    print("   ‚Ä¢ Mais precisa e realista")
    print("   ‚Ä¢ Considera como as pe√ßas realmente se veem juntas")
    print("   ‚Ä¢ Avalia coordena√ß√£o de cores e estilo")
    print("   ‚Ä¢ Insights mais relevantes")

if __name__ == "__main__":
    print("üöÄ Iniciando teste de an√°lise completa de outfit...")
    
    # Executar teste principal
    success = test_complete_outfit_analysis()
    
    if success:
        print("\n‚úÖ Teste conclu√≠do com sucesso!")
        explain_analysis_differences()
    else:
        print("\n‚ùå Teste falhou!")
    
    print("\n" + "=" * 50)
    print("üéØ Para testar a an√°lise completa:")
    print("   1. Coloque uma imagem com uma pessoa vestida em test_images/outfit_test.jpg")
    print("   2. Execute: python test_complete_outfit_analysis.py")
    print("   3. Compare an√°lise individual vs completa")
    print("   4. Observe como o CLIP v√™ o outfit como um todo!")
    print("=" * 50) 